package Vistas;

/* Generated by Together */


//import Conexion.*;

import Controlador.ControladorAlumnos;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent;


    public class AgregarAlumnoVentana extends JFrame {
        //
        Container panel;
        GridLayout gLayout;
        JButton btnAceptar = new JButton("Aceptar");
        JButton btnCancelar = new JButton("Cancelar");
        //Elementos de la swing del formulario
        JLabel lblNombre = new JLabel("Nombre del alumno: ");
        JLabel lblDireccion = new JLabel("Dirección del alumno: ");
        JLabel lblestadoMatricula = new JLabel("Estado de la matrícula: ");
        JTextField txtNombre = new JTextField();
        JTextArea txtDireccion = new JTextArea();
        JScrollPane direccionScroll = new JScrollPane(txtDireccion);
        JComboBox estadoMatriculaCombo = new JComboBox();

        JButton cancelarButton = new JButton();
        JButton aceptarButton = new JButton();

        //

        private JPanel centroPanel = new JPanel();
        Font fuenteBotones = new Font("SansSerif", Font.BOLD, 12);
        //
        ControladorAlumnos ControladorAlumnos = new ControladorAlumnos();

        // RecursosGenerales recursos = new RecursosGenerales();

        /**
         * Creates new form JFrame
         */
        public AgregarAlumnoVentana() {
            agregarAlumno();
            iniciarEventos();
            initGUI();
        }


        /**
         * This method is called from within the constructor to initialize the form.
         */
        private void initGUI() {
            txtDireccion = new JTextArea();
            txtDireccion.setBorder(BorderFactory.createBevelBorder(1));
            //Nombre
            JPanel alumnoPanel = new JPanel(new GridBagLayout());
            alumnoPanel.add(lblNombre, new GridBagConstraints(0, 1, 1, 1, 0.0, 100.0, GridBagConstraints.WEST, GridBagConstraints.VERTICAL, new Insets(12, 12, 0, 0), 0, 0));
            alumnoPanel.add(txtNombre, new GridBagConstraints(1, 1, 3, 1, 100.0, 0.0, GridBagConstraints.WEST, GridBagConstraints.HORIZONTAL, new Insets(12, 12, 0, 12), 0, 0));
            alumnoPanel.add(lblDireccion, new GridBagConstraints(0, 2, 1, 1, 0.0, 100.0, GridBagConstraints.WEST, GridBagConstraints.VERTICAL, new Insets(12, 12, 0, 0), 0, 0));
            alumnoPanel.add(txtDireccion, new GridBagConstraints(1, 2, 4, 4, 100.0, 0.0, GridBagConstraints.WEST, GridBagConstraints.HORIZONTAL, new Insets(12, 12, 0, 12), 0, 0));
            alumnoPanel.add(lblestadoMatricula, new GridBagConstraints(0, 6, 1, 1, 0.0, 100.0, GridBagConstraints.WEST, GridBagConstraints.VERTICAL, new Insets(12, 12, 0, 0), 0, 0));
            alumnoPanel.add(estadoMatriculaCombo, new GridBagConstraints(1, 6, 3, 1, 100.0, 0.0, GridBagConstraints.WEST, GridBagConstraints.HORIZONTAL, new Insets(12, 12, 0, 12), 0, 0));
            getContentPane().setLayout(new BorderLayout());
            //Ahora agregamos el panel de alumno al centro
            getContentPane().add(alumnoPanel, BorderLayout.NORTH);
            ((JPanel) getContentPane()).setBorder(BorderFactory.createEmptyBorder(12, 12, 12, 12));
            //

            //Ahora creamos un FlowLayout para añadir los botones al sur del layout del contenedor
            JPanel botonesPanel = new JPanel();
            botonesPanel.add(aceptarButton);
            botonesPanel.add(cancelarButton);
            getContentPane().add(botonesPanel, BorderLayout.SOUTH);

            this.setSize(500, 550);
            this.setResizable(false);
            //
            iniciarEventos();
            cargarRecursos();
            centrarVentana();
        }

        private void centrarVentana() {
            Toolkit kit = Toolkit.getDefaultToolkit();
            Dimension tamanoPantalla = kit.getScreenSize();
            setLocation(tamanoPantalla.width / 2 - getWidth() / 2, tamanoPantalla.height / 2 - getHeight() / 2);
        }

        public void iniciarEventos() {
            cancelarButton.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    dispose();

                }
            });
            aceptarButton.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    agregarAlumno();
                }
            });


        }

        private void agregarAlumno() {
            //va a tomar los textos de los campos de la ventana
            String nombre = txtNombre.getText();
            String direccion = txtDireccion.getText();
            String estadoMatricula = estadoMatriculaCombo.getSelectedItem().toString();
            //Recojo en una variable el resultado de insertar el alumno
            int resultado = ControladorAlumnos.insertarAlumno(nombre, direccion, estadoMatricula);
            //Si es mayor que 0, pues voy a mostrar un JDialog informando de que ha sido exitoso
            if (resultado > 0) {
                JOptionPane.showMessageDialog(this, "Alumno agregado exitosamente");
                VentanaPrincipalConTabla.getVentanaPrincipal().tablaAlumnos.repaint();
                VentanaPrincipalConTabla.getVentanaPrincipal().tablaAlumnos.revalidate();


            } else {
                JOptionPane.showMessageDialog(this, "Error al agregar alumno");
            }
            dispose();
        }

        public ActionListener accionAceptar = new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {

            }
        };
        public ActionListener accionCancelar = new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {

            }
        };

        private void cargarRecursos() {

            //comboEstado
            estadoMatriculaCombo.addItem("Provisional");
            estadoMatriculaCombo.addItem("Confirmada");
            estadoMatriculaCombo.addItem("Cancelada");


            //Iconos
            aceptarButton.setText("Aceptar");
            aceptarButton.setIcon(new ImageIcon("lib/imagenes/stock_apply_24.gif"));
            aceptarButton.setMargin(new Insets(2, 2, 2, 2));
            aceptarButton.setFont(fuenteBotones);
            //
            cancelarButton.setText("Cancelar");
            cancelarButton.setIcon(new ImageIcon("lib/imagenes/stock_cancel_24.gif"));
            cancelarButton.setMargin(new Insets(2, 2, 2, 2));
            cancelarButton.setFont(fuenteBotones);
            //

            //Tamanno de los text
            txtNombre.setSize(25, 300);
            this.setTitle("Nuevo Alumno");

        }


        /* M�todos de los eventos */

        public void actionPerformed(ActionEvent e) {
            Object source = e.getSource();
            if (source == aceptarButton) {
                aceptar();
            } else if (source == cancelarButton) {
                cancelar();
            }

        }


        private void aceptar() {
            //Aquí llamamos a nuestra base de datos a insertar alumno
        }

        private void cancelar() {

            this.setVisible(false);
        }


        private void exitForm(WindowEvent evt) {

            System.exit(0);
        }

        public static void main(String[] args) {
            Vistas.AgregarAlumnoVentana form = new Vistas.AgregarAlumnoVentana();
            form.setVisible(true);
        }

    }




    //
//    Container panel;
//    GridLayout gLayout;
//    JButton btnAceptar = new JButton("Aceptar");
//    JButton btnCancelar = new JButton("Cancelar");
//    //Elementos de la swing del formulario
//    JLabel lblNombre = new JLabel("Nombre del alumno: ");
//    JLabel lblDireccion = new JLabel("Dirección del alumno: ");
//    JLabel estadoMatriculaLabel = new JLabel ("Estado de la matrícula: ");
//    JTextField txtNombre = new JTextField();
//    JTextArea txtDireccion = new JTextArea();
//    JScrollPane direccionScroll = new JScrollPane(txtDireccion);
//    JComboBox estadoMatriculaCombo = new JComboBox();
//
//    JButton cancelarButton = new JButton();
//    JButton aceptarButton = new JButton();
//
//    //
//
//    private JPanel centroPanel = new JPanel();
//    Font fuenteBotones = new Font("SansSerif", Font.BOLD,12) ;
//    //
//    ControladorAlumnos controlador = new ControladorAlumnos();
//
//    // RecursosGenerales recursos = new RecursosGenerales();
//
//    /** Creates new form JFrame */
//    public AgregarAlumnoVentana() {
//        agregarAlumno();
//        iniciarEventos();
//        initGUI();
//    }
//
//
//    /** This method is called from within the constructor to initialize the form. */
//    private void initGUI() {
//        txtDireccion = new JTextArea();
//        txtDireccion.setBorder(BorderFactory.createBevelBorder(1));
//        //Nombre
//        JPanel alumnoPanel = new JPanel(new GridBagLayout());
//        alumnoPanel.add(lblNombre, new GridBagConstraints(0, 1, 1, 1, 0.0, 100.0, GridBagConstraints.WEST, GridBagConstraints.VERTICAL, new Insets(12, 12, 0, 0), 0, 0));
//        alumnoPanel.add(txtNombre, new GridBagConstraints(1, 1, 3, 1, 100.0, 0.0, GridBagConstraints.WEST, GridBagConstraints.HORIZONTAL, new Insets(12, 12, 0, 12), 0, 0));
//        alumnoPanel.add(lblDireccion, new GridBagConstraints(0, 2, 1, 1, 0.0, 100.0, GridBagConstraints.WEST, GridBagConstraints.VERTICAL, new Insets(12, 12, 0, 0), 0, 0));
//        alumnoPanel.add(txtDireccion, new GridBagConstraints(1, 2, 4, 4, 100.0, 0.0, GridBagConstraints.WEST, GridBagConstraints.HORIZONTAL, new Insets(12, 12, 0, 12), 0, 0));
//        alumnoPanel.add(estadoMatriculaLabel, new GridBagConstraints(0, 6, 1, 1, 0.0, 100.0, GridBagConstraints.WEST, GridBagConstraints.VERTICAL, new Insets(12, 12, 0, 0), 0, 0));
//        alumnoPanel.add(estadoMatriculaCombo, new GridBagConstraints(1, 6, 3, 1, 100.0, 0.0, GridBagConstraints.WEST, GridBagConstraints.HORIZONTAL, new Insets(12, 12, 0, 12), 0, 0));
//        getContentPane().setLayout(new BorderLayout());
//        //Ahora agregamos el panel de alumno al centro
//        getContentPane().add(alumnoPanel, BorderLayout.NORTH);
//        ((JPanel)getContentPane()).setBorder(BorderFactory.createEmptyBorder(12, 12, 12, 12));
//        //
//
//        //Ahora creamos un FlowLayout para añadir los botones al sur del layout del contenedor
//        JPanel botonesPanel = new JPanel();
//        botonesPanel.add(aceptarButton);
//        botonesPanel.add(cancelarButton);
//        getContentPane().add(botonesPanel, BorderLayout.SOUTH);
//
//        this.setSize(500, 550);
//        this.setResizable(false);
//        //
//        iniciarEventos();
//        cargarRecursos();
//        centrarVentana();
//    }
//
//    private void centrarVentana() {
//        Toolkit kit = Toolkit.getDefaultToolkit();
//        Dimension tamanoPantalla = kit.getScreenSize();
//        setLocation(tamanoPantalla.width / 2 - getWidth() / 2, tamanoPantalla.height / 2 - getHeight() / 2);
//    }
//
//    public void iniciarEventos() {
//        cancelarButton.addActionListener(new ActionListener() {
//            public void actionPerformed(ActionEvent e) {
//                dispose();
//
//            }
//        });
//        aceptarButton.addActionListener(new ActionListener() {
//            public void actionPerformed(ActionEvent e) {
//                agregarAlumno();
//            }
//        });
//
//
//    }
//
//    private void agregarAlumno() {
//        //va a tomar los textos de los campos de la ventana
//        String nombre = txtNombre.getText();
//        String direccion = txtDireccion.getText();
//        String estadoMatricula = estadoMatriculaCombo.getSelectedItem().toString();
//        //Recojo en una variable el resultado de insertar el alumno
//        int resultado = controlador.insertarAlumno(nombre, direccion, estadoMatricula);
//        //Si es mayor que 0, pues voy a mostrar un JDialog informando de que ha sido exitoso
//        if (resultado > 0) {
//            JOptionPane.showMessageDialog(this, "Alumno agregado exitosamente");
//            VentanaPrincipalConTabla.getVentanaPrincipal().tablaAlumnos.repaint();
//            VentanaPrincipalConTabla.getVentanaPrincipal().tablaAlumnos.revalidate();
//
//
//        }
//        else {
//            JOptionPane.showMessageDialog(this, "Error al agregar alumno");
//        }
//        dispose();
//    }
//
//    public ActionListener accionAceptar = new ActionListener() {
//
//        @Override
//        public void actionPerformed(ActionEvent e) {
//
//        }
//    };
//    public ActionListener accionCancelar = new ActionListener() {
//
//        @Override
//        public void actionPerformed(ActionEvent e) {
//
//        }
//    };
//
//    private void cargarRecursos() {
//
//        //comboEstado
//        estadoMatriculaCombo.addItem("Provisional");
//        estadoMatriculaCombo.addItem("Confirmada");
//        estadoMatriculaCombo.addItem("Cancelada");
//
//
//        //Iconos
//        aceptarButton.setText("Aceptar");
//        aceptarButton.setIcon(new ImageIcon("lib/imagenes/stock_apply_24.gif"));
//        aceptarButton.setMargin(new Insets(2, 2, 2, 2));
//        aceptarButton.setFont(fuenteBotones);
//        //
//        cancelarButton.setText("Cancelar");
//        cancelarButton.setIcon(new ImageIcon("lib/imagenes/stock_cancel_24.gif"));
//        cancelarButton.setMargin(new Insets(2, 2, 2, 2));
//        cancelarButton.setFont(fuenteBotones);
//        //
//
//        //Tamanno de los text
//        txtNombre.setSize(25, 300);
//        this.setTitle("Nuevo Alumno");
//
//    }
//
//
//    /* M�todos de los eventos */
//
//    public void actionPerformed(ActionEvent e) {
//        Object source = e.getSource();
//        if (source == aceptarButton) {
//            aceptar();
//        }
//        else if (source == cancelarButton) {
//            cancelar();
//        }
//
//    }
//
//
//    private void aceptar() {
//        //Aquí llamamos a nuestra base de datos a insertar alumno
//    }
//    private void cancelar() {
//        this.setVisible(false);
//    }
//
//
//    /** Exit the Application */
//    private void exitForm(WindowEvent evt) {
//        System.exit(0);
//    }
//
//    public static void main (String[] args) {
//        AgregarAlumnoVentana form = new AgregarAlumnoVentana();
//        form.setVisible(true);
//    }
//
//}
